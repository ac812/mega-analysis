#!/usr/local/bin/python

import os
import re
import shutil
import sys
import ConfigParser as config

if len(sys.argv)!=1:
    print "Usage: %s" % (sys.argv[0].split("/")[-1],)
    sys.exit(-1)

cfg = config.ConfigParser()
cfg.read(os.path.expanduser("~/.megacfg"))
scriptDir = cfg.get("System","metaDir")
metaDB = cfg.get("DB","meta")


myFile = metaDB + "/merge.tab"
header = metaDB + "/header"
os.system(
    "python %s/mergeSources.py %s/tartu.tab %s/extended.tab > %s 2>%s" %
            (scriptDir, metaDB, metaDB, myFile, header))

def correct(myFile, wrong, right):
    os.system("perl -pi -e 's/%s/%s/g' %s" % (wrong, right, myFile))

def addTabs(myFile):
    tmpName = myFile + str(os.getpid())
    shutil.copyfile(myFile, tmpName)
    w = open(myFile, "w")
    tmp = open(tmpName)
    for l in tmp:
        toks = l.rstrip().split("\t")
        while len(toks)<24:
            toks.append("")
        w.write("\t".join(toks) + "\n")
    w.close()
    tmp.close()
    os.remove(tmpName)

def cleanWhiteSpace(myFile):
    tmpName = myFile + str(os.getpid())
    shutil.copyfile(myFile, tmpName)
    w = open(myFile, "w")
    tmp = open(tmpName)
    for l in tmp:
        toks = l.rstrip().split("\t")
        for i in range(len(toks)):
            toks[i] = toks[i].lstrip().rstrip()
        w.write("\t".join(toks) + "\n")
    w.close()
    tmp.close()
    os.remove(tmpName)

def correctBarrier(myFile, posBarr, barr, posChange, newVal):
    tmpName = myFile + str(os.getpid())
    shutil.copyfile(myFile, tmpName)
    w = open(myFile, "w")
    tmp = open(tmpName)
    myRe = re.compile(barr)
    for l in tmp:
        toks = l.split("\t")
        toks[-1] = toks[-1].rstrip()
        if myRe.match(toks[posBarr]):
            toks[posChange] = newVal
        w.write("\t".join(toks) + "\n")
    w.close()
    tmp.close()
    os.remove(tmpName)

cleanWhiteSpace(myFile)
addTabs(myFile)
correctBarrier(myFile, 0, "KNTK385", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK386", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK388", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK390", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK392", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK394", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK396", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK409", 2, "North Kannadi")
correctBarrier(myFile, 0, "KNTK408", 2, "North Kannadi")
correctBarrier(myFile, 2, "Dolgan", 7, "Siberia")
correctBarrier(myFile, 2, "Azerb", 7, "Caucasus")
correct(myFile, "Dolgans", "Dolgan")
correct(myFile, "Egyptans", "Egyptians")
correct(myFile, "Ethipoia", "Ethiopia")
correct(myFile, "North_Ossetians", "North Ossetians")
correct(myFile, "Uzbekistan_Jews", "Uzbekistan Jews")
correct(myFile, "Bulgarian_gypsies", "Bulgarian Gypsies")
correct(myFile, "Indian_Jews", "Indian Jews")
correct(myFile, "EastIndian", "East Indians")
correct(myFile, "\teven\t", "\tEven\t")
correct(myFile, "\tkalmyk\t", "\tKalmyk\t")
correct(myFile, "\tkurd\t", "\tKurd\t")
correct(myFile, "FRANCE_JEW", "France Jews")
correct(myFile, "IranJew", "Iran Jews")
correct(myFile, "KurdJew", "Kurd Jews")
correct(myFile, "Macedonian_Gypsies", "Macedonian Gypsies")
correct(myFile, "Aeta ", "Aeta")
correct(myFile, "Batak ", "Batak")
correct(myFile, "Belarussian\t", "Belarusian\t")
correct(myFile, "Belorussian\t", "Belarusian\t")
correct(myFile, " BENGALI", "Bengali")
correct(myFile, "Biaka Pygmies ", "Biaka Pygmies")
correct(myFile, "BRAHMIN", "Brahmin")
correct(myFile, "Dolgan\t", "Dolgans\t")
correct(myFile, "HAZARA", "Hazara")
correct(myFile, "\tkazakh\t", "\tKazakhs\t")
correct(myFile, "KHARIA", "Kharia")
correct(myFile, "LOW_CASTE", "Low Caste")
correct(myFile, "LOW CASTE", "Low Caste")
correct(myFile, "NORTH KANNADI", "North Kannadi")
correct(myFile, "NORTH_KANNADI", "")
correct(myFile, "Piramalai_Kallar", "Piramalai Kallar")
correct(myFile, "Romanian_Jews", "Romanian Jews")
correct(myFile, "Yemen_Jews", "Yemen Jews")
correct(myFile, "SAVARA", "Savara")
correct(myFile, "\tSelkup\t", "\tSelkups\t")
correct(myFile, "Sephardic_Jews", "Sephardic Jews")
correct(myFile, "Slovakian_gypsies", "Slovakian Gypsies")
correct(myFile, "Russian", "Russia") # ... To avoid country problems
correct(myFile, "KHASI", "Khasi")
correct(myFile, "\(LYNGAM\)", "Lyngam") #Khasi
correct(myFile, "\(PNAR\)", "Pnar") #Khasi
correct(myFile, "ASUR", "Asur")
correct(myFile, "BENGALI", "Bengali")
correct(myFile, "BHUNJIA", "Bhunjia")
correct(myFile, "BONDA", "Bonda")
correct(myFile, "CHAMAR", "Chamar")
correct(myFile, "CHENCHU", "Chenchu")
correct(myFile, "DHARKAR", "Dharkar")
correct(myFile, "DHURWA", "Dhurwa")
correct(myFile, "DUSADH", "Dusadh")
correct(myFile, "ESKIMO", "Eskimo")
correct(myFile, "GADABA", "Gadaba")
correct(myFile, "GARO", "Garo")
correct(myFile, "GOND", "Gond")
correct(myFile, "HAIDA", "Haida")
correct(myFile, "HALAKIPIKKI", "Halakipikki")
correct(myFile, "HO", "Ho")
correct(myFile, "JUANG", "Juang")
correct(myFile, "KANJAR", "Kanjar")
correct(myFile, "KOL", "Kol")
correct(myFile, "KSHTRIYA", "Kshtriya")
correct(myFile, "KURMI", "Kurmi")
correct(myFile, "KURUMBA", "Kurumba")
correct(myFile, "KUSUNDA", "Kusunda")
correct(myFile, "LAMBADI", "Lambadi")
correct(myFile, "MALAYAN", "Malayan")
correct(myFile, "MEENA", "Meena")
correct(myFile, "MEGHAWAL", "Meghawal")
correct(myFile, "MUSLIM", "Muslim")
correct(myFile, "NAGA", "Naga")
correct(myFile, "NAN Melanesian", "Nan Melanesian")
correct(myFile, "NAVAJO", "Navajo")
correct(myFile, "NIHALI", "Nihali")
correct(myFile, "PANIYA", "Paniya")
correct(myFile, "PASHTUN", "Pashtun")
correct(myFile, "SAKILLI", "Sakilli")
correct(myFile, "SANTHAL", "Santhal")
correct(myFile, "SICILY", "Sicily") ##XXX merge?
correct(myFile, "THARU", "Tharu")
correct(myFile, "TLINGIT", "Tligit")
correct(myFile, "TSIMSIAN", "Tsimsian")
correct(myFile, "Armenians", "Armenia")
correct(myFile, "\tTuscany\t", "\tTuscan\t")
correct(myFile, "\ttuva\t", "\tTuvinians\t")
#correct(myFile, "", "")
#correct(myFile, "", "")

os.system("sort -t\\t -k3,3 %s > %s/clean.tab" % (myFile, metaDB))
